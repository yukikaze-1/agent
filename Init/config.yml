# 核心LLM
    # 采用Ollama的方式默认使用llama3.2
LLM_model:
  name: llama3.2 # ollama运行的模型名称(必须在ollama中支持并且可以运行的)

############################################################################################
# 外部服务

# 要启动的基础外部服务
external_services:
  base_services:
    - ollama_server:
        script: "ollama"
        service_name: "ollama_server"
        conda_env: "/home/yomu/data/anaconda3/envs"
        args: ["serve"]
        use_python: false
        run_in_background: true
        is_base: true
        log_file: "ollama_server.log"

    - GPTSoVits_server:
        script: "/home/yomu/GPTSoVits/api_v2.py"
        service_name: "GPTSoVits_server"
        conda_env: "/home/yomu/data/anaconda3/envs/GPTSoVits"
        args: ["-a", "127.0.0.1","-p","9880"]
        use_python: true
        run_in_background: true
        is_base: true
        log_file: "GPTSoVits_server.log"

    - SenseVoice_server:
        script: "/home/yomu/SenseVoice/SenseVoice_server.py"
        service_name: "SenseVoice_server"
        conda_env: "/home/yomu/data/anaconda3/envs/SenseVoice"
        args: ["--host", "127.0.0.1", "--port", "9890"]
        use_python: true
        run_in_background: true
        is_base: true
        log_file: "SenseVoice_server.log"

    - MicroServiceGateway:
        script: "/home/yomu/agent/Service/Gateway/MicroServiceGateway.py"
        service_name: "MicroServiceGateway"
        conda_env: "/home/yomu/data/anaconda3/envs/agent"
        args: []
        use_python: true
        run_in_background: true
        is_base: true
        log_file: "MicroServiceGateway.log"

    - APIGateway:
        script: "/home/yomu/agent/Service/Gateway/APIGateway.py"
        service_name: "APIGateway"
        conda_env: "/home/yomu/data/anaconda3/envs/agent"
        args: []
        use_python: true
        run_in_background: true
        is_base: true
        log_file: "APIGateway.log"

    - UserService:
        script: "/home/yomu/agent/Service/Other/UserService.py"
        service_name: "UserService"
        conda_env: "/home/yomu/data/anaconda3/envs/agent"
        args: []
        use_python: true
        run_in_background: true
        is_base: true
        log_file: "UserService.log"

    - OllamaAgent:
        script: "/home/yomu/agent/Module/LLM/OllamaAgent.py"
        service_name: "OllamaAgent"
        conda_env: "/home/yomu/data/anaconda3/envs/agent"
        args: []
        use_python: true
        run_in_background: true
        is_base: true
        log_file: "OllamaAgent.log"
    
    - Consul:
        script: "consul"
        service_name: "Consul"
        conda_env: "/home/yomu/data/anaconda3/envs"
        # args: ["agent", "-server", "-bind=127.0.0.1", "-client=127.0.0.1",
        # "-bootstrap-expect=3" ,"-node=consul-server-01" ,
        # "-data-dir=/home/yomu/data/consul_data/server01",
        # "-join=127.0.0.1:8300" ,"-http-port=8500" ,"-rpc-port=8300" ,"-server-port=8300"]
        args: ["agent", "-dev", "-client", '{{ GetPrivateInterfaces | exclude "type" "ipv6" | join "address" " " }} {{ GetAllInterfaces | include "flags" "loopback" | join "address" " " }}']
        use_python: false
        run_in_background: true
        is_base: true
        log_file: "Consul.log"

  # (可选)启动的optional外部服务
  optional_services:
    
  # 目前已支持的外部服务
  support_services:
    - ollama
    - GPTSoVits
    - SenseVoice
  # 待支持的外部服务
  #_services:
  #  - yolo11 
  # TODO 后期修改0.0.0.0，让其只监听本地
  # 外部服务器ipaddress---port
  ip_port:
    - ollama_server: ["127.0.0.1","11434"]
    - GPTSoVits: ["127.0.0.1","9880"]
    - SenseVoice: ["127.0.0.1","9890"]

############################################################################################

### 内部模块

# 要启动的基础模块
internal_modules:
  base_modules: 
    - GPTSoVitsAgent: Module.TTS.GPTSoVits
    - SenseVoiceAgent: Module.STT.SenseVoice
  # (可选)启动的optional功能模块
  optional_modules:
    
  # 目前已支持的内部模块
  support_modules:
    - GPTSoVitsAgent
    - SenseVoiceAgent
  # 待支持的内部模块
  #_module:
  #  - yolo11: Module.Utils.yolo11

############################################################################################
